@inject SignInManager<User> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<div class="col-md-3 pt-0">
    <div class="list-group list-group-flush account-settings-links">
        <a class="nav-link @ManageNavPages.IndexNavClass(ViewContext) list-group-item list-group-item-action" id="profile" asp-page="./Index">Profile</a>
        <a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext) list-group-item list-group-item-action" id="change-password" asp-page="./ChangePassword">Password</a>
        @if (hasExternalLogins)
        {
          <a class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext) list-group-item list-group-item-action" id="external-login" asp-page="./ExternalLogins">Info</a>
        }
        <a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext) list-group-item list-group-item-action" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a>
        <a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext) list-group-item list-group-item-action" id="personal-data" asp-page="./PersonalData">Personal Data</a>
    </div>
</div>